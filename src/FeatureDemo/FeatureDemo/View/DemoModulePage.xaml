<Page
    x:Class="FeatureDemo.View.DemoModulePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:common="using:FeatureDemo.Common"
    xmlns:dx="using:DevExpress.WinUI.Core"
    xmlns:dxri="using:DevExpress.WinUI.Ribbon.Internal"
    xmlns:demovm="using:FeatureDemo.ViewModel"
    mc:Ignorable="d"
    x:Name="pageRoot"
    IsTabStop="false">
    <Page.Resources>
        <ResourceDictionary>
            <dx:BooleanNegationConverter x:Name="booleanNegationConverter" />
            <dx:BooleanToVisibilityConverter x:Name="booleanToVisibilityConverter" />
            <dx:BooleanToVisibilityConverter x:Name="invertedBooleanToVisibilityConverter" Inverse="True" />
        </ResourceDictionary>
    </Page.Resources>

    <Grid Background="Transparent" RowDefinitions="Auto, Auto, *">
        <Grid ColumnDefinitions="*, Auto">
            <TextBlock
                Margin="16,12,0,10"
                VerticalAlignment="Center"
                FontSize="24"
                Text="{x:Bind MainViewModel.SelectedDemo.DemoModule.Title, Mode=OneWay}"
                TextTrimming="CharacterEllipsis"
                TextWrapping="NoWrap">
                <TextBlock.TranslationTransition>
                    <Vector3Transition Duration="0:0:0.0" />
                </TextBlock.TranslationTransition>
            </TextBlock>
            <dxri:ToolbarControl
                Grid.Column="1"
                Margin="0,0,10,0"
                VerticalAlignment="Center"
                Background="Transparent">
                <dxri:ToolbarGroup>
                    <dxri:ToolbarButton
                        ItemStyle="GlyphWithText"
                        Command="{x:Bind MainViewModel.ShowPrevCommand}"
                        Content="Prev"
                        IconHeight="24"
                        IconSource="&#xEC52;"
                        IconWidth="24"
                        Visibility="{x:Bind MainViewModel.PrevNextEnabled, Converter={StaticResource booleanToVisibilityConverter}, Mode=OneWay}" />
                    <dxri:ToolbarButton
                        ItemStyle="GlyphWithText"
                        Command="{x:Bind MainViewModel.ShowNextCommand, Mode=OneTime}"
                        Content="Next"
                        FlyoutFlowBreakWithSeparator="True"
                        IconHeight="24"
                        IconSource="&#xEBE7;"
                        IconWidth="24"
                        Visibility="{x:Bind MainViewModel.PrevNextEnabled, Converter={StaticResource booleanToVisibilityConverter}, Mode=OneWay}" />
                    <dxri:ToolbarToggleButton
                        ItemStyle="GlyphWithText"
                        CheckedContent="Show demo"
                        CheckedIconSource="&#xF19D;"
                        Content="Show code"
                        IconHeight="24"
                        IconSource="&#xF19D;"
                        IconWidth="24"
                        IsChecked="{x:Bind IsCodeVisible, Mode=TwoWay}"
                        IsThreeStateMode="False" />
                    <dxri:ToolbarButton
                        ItemStyle="GlyphWithText"
                        Click="{x:Bind ToggleTheme}"
                        Content="Toggle Theme"
                        IconHeight="24"
                        IconSource="&#xE771;"
                        IconWidth="24" />
                    <dxri:ToolbarToggleButton
                        ItemStyle="Glyph"
                        IconHeight="24"
                        IconSource="&#xE713;"
                        IconWidth="24"
                        IsChecked="{x:Bind IsOptionsPaneOpen, Mode=TwoWay}"
                        IsEnabled="{x:Bind IsCodeVisible, Converter={StaticResource booleanNegationConverter}, Mode=OneWay}"
                        Visibility="{x:Bind DemoModuleView.HasOptions, Converter={StaticResource booleanToVisibilityConverter}, Mode=OneWay}" />
                </dxri:ToolbarGroup>
            </dxri:ToolbarControl>
        </Grid>
        <Rectangle
            Grid.Row="1"
            Height="1"
            Margin="0,2,0,0"
            Fill="{ThemeResource SeparatorBrush}" />

        <SplitView
            x:Name="splitView"
            Grid.Row="2"
            IsPaneOpen="{x:Bind IsOptionsPaneOpen, Mode=OneWay}"
            OpenPaneLength="{x:Bind DemoModuleView.OptionsPaneWidth, Mode=OneWay}"
            PaneBackground="Transparent"
            PanePlacement="Right"
            Visibility="{x:Bind IsCodeVisible, Converter={StaticResource invertedBooleanToVisibilityConverter}, Mode=OneWay}">
            <SplitView.Pane>
                <Grid>
                    <Rectangle
                        Width="1"
                        HorizontalAlignment="Left"
                        Fill="{ThemeResource SeparatorBrush}" />
                    <ScrollViewer
                        Margin="1,0,0,0"
                        Background="{ThemeResource OptionsPanelBackground}"
                        HorizontalScrollMode="Disabled"
                        VerticalScrollBarVisibility="Auto">
                        <ContentPresenter Content="{x:Bind DemoModuleView.Options, Mode=OneWay}" Margin="12" />
                    </ScrollViewer>
                </Grid>
            </SplitView.Pane>

            <Grid>
                <StackPanel
                    x:Name="indicator"
                    MaxWidth="200"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Visibility="Collapsed">
                    <TextBlock
                        HorizontalAlignment="Center"
                        FontSize="21"
                        FontWeight="Light"
                        Foreground="{ThemeResource LoadingIndicatorTextForeground}"
                        Text="Loading..." />
                    <ProgressBar
                        Margin="0,8,0,0"
                        Foreground="{ThemeResource LoadingIndicatorForeground}"
                        IsIndeterminate="True" />
                </StackPanel>
                <Grid x:Name="demoContainer" RowDefinitions="*, Auto">
                    <Border Background="{ThemeResource PageContentBackground}">
                        <ContentControl
                            Content="{x:Bind DemoModuleView, Mode=OneWay}"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch" />
                    </Border>
                    <Border
                        Grid.Row="1"
                        BorderThickness="0,1,0,0"
                        BorderBrush="{ThemeResource DescriptionPanelBorder}"
                        Padding="14"
                        Background="{ThemeResource DescriptionPanelBackground}">
                        <TextBlock
                            VerticalAlignment="Center"
                            FontFamily="Segoe UI Light"
                            FontSize="14"
                            Foreground="{ThemeResource DescriptionPanelForeground}"
                            LineHeight="24"
                            LineStackingStrategy="BlockLineHeight"
                            Text="{x:Bind MainViewModel.SelectedDemo.DemoModule.About, Mode=OneWay}"
                            TextTrimming="WordEllipsis"
                            TextWrapping="Wrap" />
                    </Border>
                </Grid>
            </Grid>
        </SplitView>

        <Grid
            Grid.Row="2"
            Margin="16,16,0,0"
            RowDefinitions="Auto, *"
            Visibility="{x:Bind IsCodeVisible, Mode=OneWay}">
            <ComboBox
                MinWidth="300"
                ItemsSource="{x:Bind MainViewModel.SelectedDemo.SourceList, Mode=OneWay}"
                SelectedItem="{x:Bind MainViewModel.SelectedDemo.SelectedSource, Mode=TwoWay}">
                <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="demovm:SourceFileViewModel">
                        <TextBlock Text="{x:Bind FileName}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <common:CodeViewer
                Grid.Row="1"
                Margin="0,16,0,0"
                Source="{x:Bind MainViewModel.SelectedDemo.SelectedSource, Mode=OneWay}" />
        </Grid>
    </Grid>
</Page>
